Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.InitMotor) refers to main.o(i.motorStopAll) for motorStopAll
    main.o(i.InitSongs) refers to main.o(.data) for canon_in_d
    main.o(i.InitSongs) refers to main.o(.bss) for canonInD
    main.o(i.InitUART2) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    main.o(i.InitUART2) refers to main.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    main.o(i.InitUART2) refers to main.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(i.InitUART2) refers to main.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    main.o(i.PORTD_IRQHandler) refers to main.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(i.PORTD_IRQHandler) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    main.o(i.PORTD_IRQHandler) refers to rtx_evflags.o(.text.osEventFlagsClear) for osEventFlagsClear
    main.o(i.PORTD_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.PORTD_IRQHandler) refers to main.o(.data) for hasStarted
    main.o(i.UART2_IRQHandler) refers to main.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(i.UART2_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.UART2_IRQHandler) refers to main.o(.data) for rx_data
    main.o(i.autonomous_thread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(i.autonomous_thread) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    main.o(i.autonomous_thread) refers to main.o(i.motorStopAll) for motorStopAll
    main.o(i.autonomous_thread) refers to main.o(i.motorRotateCone) for motorRotateCone
    main.o(i.autonomous_thread) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.autonomous_thread) refers to main.o(.data) for stage
    main.o(i.greenLedControlSingle) refers to main.o(i.__ARM_common_switch8) for __ARM_common_switch8
    main.o(i.initUltraSonic) refers to main.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    main.o(i.main) refers to system_mkl25z4.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to main.o(i.InitUART2) for InitUART2
    main.o(i.main) refers to main.o(i.InitPWM) for InitPWM
    main.o(i.main) refers to main.o(i.InitSongs) for InitSongs
    main.o(i.main) refers to main.o(i.InitMotor) for InitMotor
    main.o(i.main) refers to main.o(i.InitGreenLED) for InitGreenLED
    main.o(i.main) refers to main.o(i.InitGPIOLedBlink) for InitGPIOLedBlink
    main.o(i.main) refers to main.o(i.initUltraSonic) for initUltraSonic
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    main.o(i.main) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(.data) for green_led_semaphore
    main.o(i.main) refers to main.o(.constdata) for thread1_attr_high
    main.o(i.main) refers to main.o(i.tBrain) for tBrain
    main.o(i.main) refers to main.o(i.tRunningLedGreen) for tRunningLedGreen
    main.o(i.main) refers to main.o(i.tGreenLedStill) for tGreenLedStill
    main.o(i.main) refers to main.o(i.tRedLed500) for tRedLed500
    main.o(i.main) refers to main.o(i.tRedLed250) for tRedLed250
    main.o(i.main) refers to main.o(i.tMotorForward) for tMotorForward
    main.o(i.main) refers to main.o(i.tMotorBackward) for tMotorBackward
    main.o(i.main) refers to main.o(i.tMotorLeft) for tMotorLeft
    main.o(i.main) refers to main.o(i.tMotorRight) for tMotorRight
    main.o(i.main) refers to main.o(i.tPlaySong) for tPlaySong
    main.o(i.main) refers to main.o(i.tMotorDiagLeft) for tMotorDiagLeft
    main.o(i.main) refers to main.o(i.tMotorDiagRight) for tMotorDiagRight
    main.o(i.main) refers to main.o(i.ultrasonic_trigger_thread) for ultrasonic_trigger_thread
    main.o(i.main) refers to main.o(i.ultrasonic_counter_thread) for ultrasonic_counter_thread
    main.o(i.main) refers to main.o(i.autonomous_thread) for autonomous_thread
    main.o(i.motorBackward) refers to main.o(i.moveSpecificWheel) for moveSpecificWheel
    main.o(i.motorDiagonalLeft) refers to main.o(i.moveSpecificWheel) for moveSpecificWheel
    main.o(i.motorDiagonalRight) refers to main.o(i.moveSpecificWheel) for moveSpecificWheel
    main.o(i.motorForward) refers to main.o(i.moveSpecificWheel) for moveSpecificWheel
    main.o(i.motorLeft) refers to main.o(i.moveSpecificWheel) for moveSpecificWheel
    main.o(i.motorRight) refers to main.o(i.moveSpecificWheel) for moveSpecificWheel
    main.o(i.motorRotateCone) refers to main.o(i.motorLeft) for motorLeft
    main.o(i.motorRotateCone) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.motorRotateCone) refers to main.o(i.motorForward) for motorForward
    main.o(i.motorRotateCone) refers to main.o(i.motorStopAll) for motorStopAll
    main.o(i.motorRotateCone) refers to main.o(i.motorRight) for motorRight
    main.o(i.moveSpecificWheel) refers to main.o(i.__ARM_common_switch8) for __ARM_common_switch8
    main.o(i.playNote) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    main.o(i.playNote) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.setFreq) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    main.o(i.tBrain) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(i.tBrain) refers to main.o(i.__ARM_common_switch8) for __ARM_common_switch8
    main.o(i.tBrain) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.tBrain) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    main.o(i.tBrain) refers to main.o(i.motorStopAll) for motorStopAll
    main.o(i.tBrain) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.tBrain) refers to main.o(.data) for test
    main.o(i.tCheckWifiLed) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tCheckWifiLed) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.tCheckWifiLed) refers to main.o(i.greenLedControlAll) for greenLedControlAll
    main.o(i.tCheckWifiLed) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.tCheckWifiLed) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.tCheckWifiLed) refers to main.o(.data) for green_led_semaphore
    main.o(i.tGreenLedStill) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.tGreenLedStill) refers to main.o(i.greenLedControlAll) for greenLedControlAll
    main.o(i.tGreenLedStill) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.tGreenLedStill) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.tGreenLedStill) refers to main.o(.data) for MOVEMENT_STATE
    main.o(i.tMotorBackward) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tMotorBackward) refers to main.o(i.motorBackward) for motorBackward
    main.o(i.tMotorDiagLeft) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tMotorDiagLeft) refers to main.o(i.motorDiagonalLeft) for motorDiagonalLeft
    main.o(i.tMotorDiagRight) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tMotorDiagRight) refers to main.o(i.motorDiagonalRight) for motorDiagonalRight
    main.o(i.tMotorForward) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tMotorForward) refers to main.o(i.motorForward) for motorForward
    main.o(i.tMotorLeft) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tMotorLeft) refers to main.o(i.motorLeft) for motorLeft
    main.o(i.tMotorRight) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(i.tMotorRight) refers to main.o(i.motorRight) for motorRight
    main.o(i.tPlaySong) refers to main.o(i.playNote) for playNote
    main.o(i.tPlaySong) refers to main.o(.data) for MUSIC_STATE
    main.o(i.tPlaySong) refers to main.o(.bss) for canonInD
    main.o(i.tRedLed250) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.tRedLed250) refers to main.o(i.led_control) for led_control
    main.o(i.tRedLed250) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.tRedLed250) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.tRedLed250) refers to main.o(.data) for MOVEMENT_STATE
    main.o(i.tRedLed500) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.tRedLed500) refers to main.o(i.led_control) for led_control
    main.o(i.tRedLed500) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.tRedLed500) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.tRedLed500) refers to main.o(.data) for MOVEMENT_STATE
    main.o(i.tRunningLedGreen) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.tRunningLedGreen) refers to main.o(i.greenLedControlAll) for greenLedControlAll
    main.o(i.tRunningLedGreen) refers to main.o(i.__ARM_common_switch8) for __ARM_common_switch8
    main.o(i.tRunningLedGreen) refers to main.o(i.greenLedControlSingle) for greenLedControlSingle
    main.o(i.tRunningLedGreen) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.tRunningLedGreen) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.tRunningLedGreen) refers to main.o(.data) for MOVEMENT_STATE
    main.o(i.ultrasonic_counter_thread) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    main.o(i.ultrasonic_counter_thread) refers to main.o(.data) for ultrasonicCounterEvent
    main.o(i.ultrasonic_trigger_thread) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.ultrasonic_trigger_thread) refers to main.o(.data) for stage
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_config.o(i.osRtxErrorNotify) refers to main.o(i.__ARM_common_switch8) for __ARM_common_switch8
    startup_mkl25z4.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to main.o(i.UART2_IRQHandler) for UART2_IRQHandler
    startup_mkl25z4.o(RESET) refers to main.o(i.PORTD_IRQHandler) for PORTD_IRQHandler
    startup_mkl25z4.o(.ARM.__at_0x400) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(i.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to __main.o(!!!main) for __main
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(HEAP) for Heap_Mem
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(STACK) for Stack_Mem
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to main.o(i.__ARM_common_switch8) for __ARM_common_switch8
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm0.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mkl25z4.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(i.offPwmFreq), (16 bytes).
    Removing main.o(i.selfDrivingMode), (2 bytes).
    Removing main.o(i.setFreq), (64 bytes).
    Removing main.o(i.tCheckWifiLed), (88 bytes).
    Removing main.o(i.tSelfDrivingMode), (2 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (88 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(.rev16_text), (4 bytes).
    Removing system_mkl25z4.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (136 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (18 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (18 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (96 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (18 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (40 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (18 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (96 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (162 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (444 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

365 unused section(s) (total 8412 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Users\ASUS\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\ASUS\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.6.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\MKL25Z128xxx4\\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000120   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000122   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000124   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000126   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000128   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000128   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000128   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0000012e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000136   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000013a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000013a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000142   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000144   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000144   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000148   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000150   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x00000188   Section       64  startup_mkl25z4.o(.text)
    .text                                    0x000001c8   Section      164  irq_cm0.o(.text)
    .text                                    0x0000026c   Section        0  rt_memcpy.o(.text)
    .text                                    0x000002ee   Section        0  rt_memclr.o(.text)
    .text                                    0x0000032e   Section        0  heapauxi.o(.text)
    .text                                    0x00000334   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000372   Section        0  exit.o(.text)
    .text                                    0x00000384   Section        8  libspace.o(.text)
    .text                                    0x0000038c   Section        0  sys_exit.o(.text)
    .text                                    0x00000398   Section        2  use_no_semi.o(.text)
    .text                                    0x0000039a   Section        0  indicate_semi.o(.text)
    .text                                    0x0000039a   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x000003f0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x000003f8   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x000003fc   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section      346  aeabi_sdiv.o(.text)
    [Anonymous Symbol]                       0x0000056a   Section        0  rtx_evflags.o(.text.EventFlagsCheck)
    EventFlagsCheck                          0x0000056b   Thumb Code    78  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x000005b8   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x000005b9   Thumb Code    76  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000604   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x00000605   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000666   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x00000667   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000684   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x000006a4   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x000006a8   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x000006ac   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x000006b0   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x000006b8   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x000006f4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x000006f8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x000006fc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00000700   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x00000704   Section        0  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    SemaphoreTokenDecrement                  0x00000705   Thumb Code    36  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    [Anonymous Symbol]                       0x00000728   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    SemaphoreTokenIncrement                  0x00000729   Thumb Code    38  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x0000074e   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x0000074f   Thumb Code    78  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0000079c   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x0000079d   Thumb Code    76  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x000007e4   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x000007e8   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x0000080c   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00000810   Section        0  rtx_evflags.o(.text.osEventFlagsClear)
    __arm_cp.3_0                             0x00000830   Number         4  rtx_evflags.o(.text.osEventFlagsClear)
    [Anonymous Symbol]                       0x00000834   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    __arm_cp.0_0                             0x00000854   Number         4  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x00000858   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    __arm_cp.2_0                             0x000008a4   Number         4  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x000008a8   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    __arm_cp.7_0                             0x000008e8   Number         4  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x000008ec   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x00000914   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x00000918   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0000091c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x00000940   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00000944   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x00000964   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00000968   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x000009d8   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x000009dc   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x000009fc   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00000a00   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00000a74   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00000a78   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00000a9c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00000aa0   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x00000ac4   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00000ac8   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x00000ae8   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00000aec   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00000b10   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00000b14   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    osRtxEventFlagsPostProcess               0x00000b15   Thumb Code    52  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x00000b48   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00000bc4   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00000c12   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00000c44   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000c72   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00000cac   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00000cea   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00000ceb   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00000da6   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00000dec   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00000e68   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00000e6c   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x00000ed0   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00000ed4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00000ed8   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxSemaphorePostProcess                0x00000ed9   Thumb Code    36  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x00000efc   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00000efd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00000f30   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00000f34   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x00000f35   Thumb Code   128  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x00000fb0   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00000fb4   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x00000fb5   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x00000ff4   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00000ff8   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x0000102c   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00001030   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x0000107c   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x00001080   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x00001081   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x000010d0   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x000010d4   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x000010e8   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00001114   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x0000112c   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x00001152   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x00001153   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001178   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x0000118c   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00001190   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00001198   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x000011bc   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x000011c0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x000011c4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x000011f4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x000011f8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x000011fc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x00001200   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001204   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x00001214   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001218   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x00001250   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001254   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001278   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x000012e8   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x000012ec   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x0000131c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001320   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x00001324   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00001328   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00001329   Thumb Code    96  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00001384   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00001388   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.2_0                             0x000013c8   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x000013cc   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.0_0                             0x000013ec   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x000013f0   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.3_0                             0x00001438   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x0000143c   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x00001444   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00001448   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.35_0                            0x0000149c   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x000014a0   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.38_0                            0x000014c4   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x000014c8   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x000014e8   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x000014ec   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x000014ed   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x000014fe   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsClear)
    svcRtxEventFlagsClear                    0x000014ff   Thumb Code    50  rtx_evflags.o(.text.svcRtxEventFlagsClear)
    [Anonymous Symbol]                       0x00001530   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsNew                      0x00001531   Thumb Code   116  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.9_0                             0x0000159c   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.9_1                             0x000015a0   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x000015a4   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsSet                      0x000015a5   Thumb Code   124  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x00001620   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxEventFlagsWait                     0x00001621   Thumb Code   100  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    __arm_cp.14_0                            0x00001680   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x00001684   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x00001685   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x0000168c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00001690   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x00001691   Thumb Code   328  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x000017cc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x000017d0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x000017d4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000017d8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x000017d9   Thumb Code   132  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x0000184c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x00001850   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x00001854   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x00001858   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0000185c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x0000185d   Thumb Code   232  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x00001940   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00001944   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x00001945   Thumb Code   484  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x00001b10   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00001b14   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_2                            0x00001b18   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_3                            0x00001b1c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_4                            0x00001b20   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_5                            0x00001b24   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00001b28   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00001b29   Thumb Code   188  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x00001be0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00001be4   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x00001be5   Thumb Code   152  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00001c78   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001c7c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00001c7d   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x00001d34   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00001d38   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00001d39   Thumb Code   112  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x00001da4   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00001da8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00001da9   Thumb Code   192  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00001e64   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00001e68   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreAcquire                   0x00001e69   Thumb Code    76  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    __arm_cp.11_0                            0x00001eb0   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x00001eb4   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreNew                       0x00001eb5   Thumb Code   136  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_0                             0x00001f30   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_1                             0x00001f34   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_2                             0x00001f38   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x00001f3c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxSemaphoreRelease                   0x00001f3d   Thumb Code    56  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x00001f74   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00001f75   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00001fdc   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00001fe0   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsSet                     0x00001fe1   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x0000204c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadFlagsWait                    0x0000204d   Thumb Code    80  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    __arm_cp.61_0                            0x00002098   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x0000209c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x0000209d   Thumb Code   492  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x00002270   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x00002274   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00002278   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x0000227c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x00002280   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_5                            0x00002284   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.InitGPIOLedBlink                       0x00002288   Section        0  main.o(i.InitGPIOLedBlink)
    i.InitGreenLED                           0x000022cc   Section        0  main.o(i.InitGreenLED)
    i.InitMotor                              0x0000241c   Section        0  main.o(i.InitMotor)
    i.InitPWM                                0x00002678   Section        0  main.o(i.InitPWM)
    i.InitSongs                              0x00002720   Section        0  main.o(i.InitSongs)
    i.InitUART2                              0x000027bc   Section        0  main.o(i.InitUART2)
    i.PORTD_IRQHandler                       0x00002878   Section        0  main.o(i.PORTD_IRQHandler)
    i.SystemCoreClockUpdate                  0x00002900   Section        0  system_mkl25z4.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x00002a90   Section        0  system_mkl25z4.o(i.SystemInit)
    i.UART2_IRQHandler                       0x00002a9c   Section        0  main.o(i.UART2_IRQHandler)
    i.__ARM_common_switch8                   0x00002ae0   Section        0  main.o(i.__ARM_common_switch8)
    i.__NVIC_ClearPendingIRQ                 0x00002afc   Section        0  main.o(i.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x00002afd   Thumb Code    18  main.o(i.__NVIC_ClearPendingIRQ)
    i.__NVIC_EnableIRQ                       0x00002b14   Section        0  main.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002b15   Thumb Code    26  main.o(i.__NVIC_EnableIRQ)
    i.__NVIC_SetPriority                     0x00002b34   Section        0  main.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00002b35   Thumb Code   110  main.o(i.__NVIC_SetPriority)
    i._mutex_acquire                         0x00002bac   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x00002bad   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00002bc4   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00002bc5   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x00002bd0   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x00002bd1   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00002bf4   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00002bf5   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00002c08   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.autonomous_thread                      0x00002c10   Section        0  main.o(i.autonomous_thread)
    i.greenLedControlAll                     0x00002c84   Section        0  main.o(i.greenLedControlAll)
    i.greenLedControlSingle                  0x00002da8   Section        0  main.o(i.greenLedControlSingle)
    i.initUltraSonic                         0x00002f44   Section        0  main.o(i.initUltraSonic)
    i.led_control                            0x00002fe4   Section        0  main.o(i.led_control)
    i.main                                   0x00003008   Section        0  main.o(i.main)
    i.motorBackward                          0x000031d0   Section        0  main.o(i.motorBackward)
    i.motorDiagonalLeft                      0x00003218   Section        0  main.o(i.motorDiagonalLeft)
    i.motorDiagonalRight                     0x00003264   Section        0  main.o(i.motorDiagonalRight)
    i.motorForward                           0x000032b0   Section        0  main.o(i.motorForward)
    i.motorLeft                              0x000032f8   Section        0  main.o(i.motorLeft)
    i.motorRight                             0x00003340   Section        0  main.o(i.motorRight)
    i.motorRotateCone                        0x00003388   Section        0  main.o(i.motorRotateCone)
    i.motorStopAll                           0x0000344c   Section        0  main.o(i.motorStopAll)
    i.moveSpecificWheel                      0x0000346c   Section        0  main.o(i.moveSpecificWheel)
    i.osRtxErrorNotify                       0x000034bc   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x000034dc   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x000034e0   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x000034e1   Thumb Code    30  rtx_lib.o(i.os_kernel_is_active)
    i.playNote                               0x00003504   Section        0  main.o(i.playNote)
    i.tBrain                                 0x0000353c   Section        0  main.o(i.tBrain)
    i.tGreenLedStill                         0x00003690   Section        0  main.o(i.tGreenLedStill)
    i.tMotorBackward                         0x00003724   Section        0  main.o(i.tMotorBackward)
    i.tMotorDiagLeft                         0x00003738   Section        0  main.o(i.tMotorDiagLeft)
    i.tMotorDiagRight                        0x0000374c   Section        0  main.o(i.tMotorDiagRight)
    i.tMotorForward                          0x00003760   Section        0  main.o(i.tMotorForward)
    i.tMotorLeft                             0x00003774   Section        0  main.o(i.tMotorLeft)
    i.tMotorRight                            0x00003788   Section        0  main.o(i.tMotorRight)
    i.tPlaySong                              0x0000379c   Section        0  main.o(i.tPlaySong)
    i.tRedLed250                             0x00003854   Section        0  main.o(i.tRedLed250)
    i.tRedLed500                             0x00003894   Section        0  main.o(i.tRedLed500)
    i.tRunningLedGreen                       0x000038d8   Section        0  main.o(i.tRunningLedGreen)
    i.ultrasonic_counter_thread              0x00003ac4   Section        0  main.o(i.ultrasonic_counter_thread)
    i.ultrasonic_trigger_thread              0x00003aec   Section        0  main.o(i.ultrasonic_trigger_thread)
    .constdata                               0x00003b30   Section      108  main.o(.constdata)
    .constdata                               0x00003b9c   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x00003b9c   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x00003bc0   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00003be4   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x00003c00   Section        1  irq_cm0.o(.constdata)
    .rodata                                  0x00003c04   Section      160  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00003c04   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00003c6c   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00003ca4   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00003ca4   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x1ffff000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20000000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20000040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20000040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20000074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20000074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200000c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200000c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20000108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20000150   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20000150   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20000250   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20000350   Section     1208  main.o(.data)
    .data                                    0x20000808   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x2000080c   Data           1  rtx_lib.o(.data)
    .data                                    0x20000810   Section        4  system_mkl25z4.o(.data)
    .bss                                     0x200008b8   Section     1144  main.o(.bss)
    .bss                                     0x20000d30   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x20000d90   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x20000d90   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x20000d98   Section        0  startup_mkl25z4.o(HEAP)
    STACK                                    0x20000d98   Section      256  startup_mkl25z4.o(STACK)
    Heap_Mem                                 0x20000d98   Data           0  startup_mkl25z4.o(HEAP)
    Stack_Mem                                0x20000d98   Data         256  startup_mkl25z4.o(STACK)
    __initial_sp                             0x20000e98   Data           0  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000121   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000125   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000129   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000129   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000129   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0000012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000137   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0000013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000143   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000145   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000145   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000149   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000151   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000151   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x00000189   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x00000195   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x00000197   Thumb Code     2  startup_mkl25z4.o(.text)
    ADC0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    PIT_IRQHandler                           0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTA_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM2_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    UART0_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    __user_initial_stackheap                 0x000001a5   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000001c9   Thumb Code   132  irq_cm0.o(.text)
    PendSV_Handler                           0x0000024d   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x00000259   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_memcpy                           0x0000026d   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x0000026d   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x000002ef   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x00000309   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x00000327   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x00000327   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0000032b   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x0000032b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x0000032b   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x0000032f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000331   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000333   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x00000335   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000373   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x00000385   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000385   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000038d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000399   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000399   Thumb Code     2  use_no_semi.o(.text)
    __decompress                             0x0000039b   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x0000039b   Thumb Code    86  __dczerorl2.o(.text)
    __semihosting_library_function           0x0000039b   Thumb Code     0  indicate_semi.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x000003f1   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    osRtxKernelPreInit                       0x000003fd   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    __aeabi_uidiv                            0x00000411   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x00000411   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x00000425   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x00000425   Thumb Code   326  aeabi_sdiv.o(.text)
    OS_Tick_Enable                           0x00000685   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x000006b1   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x000006b9   Thumb Code    76  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x000007e9   Thumb Code    40  rtx_delay.o(.text.osDelay)
    osEventFlagsClear                        0x00000811   Thumb Code    36  rtx_evflags.o(.text.osEventFlagsClear)
    osEventFlagsNew                          0x00000835   Thumb Code    36  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x00000859   Thumb Code    80  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x000008a9   Thumb Code    68  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x000008ed   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x0000091d   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00000945   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00000969   Thumb Code   116  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x000009dd   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00000a01   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00000a79   Thumb Code    40  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00000aa1   Thumb Code    40  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00000ac9   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00000aed   Thumb Code    40  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x00000b49   Thumb Code   124  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00000bc5   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00000c13   Thumb Code    50  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00000c45   Thumb Code    46  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00000c73   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00000cad   Thumb Code    62  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x00000da7   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00000ded   Thumb Code   128  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00000e6d   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00000ff9   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001031   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x000010d5   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x000010e9   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00001115   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0000112d   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00001179   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00001191   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x00001199   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x000011c5   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001205   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001219   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001255   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001279   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x000012ed   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x00001389   Thumb Code    68  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x000013cd   Thumb Code    36  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x000013f1   Thumb Code    76  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x0000143d   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x00001449   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x000014a1   Thumb Code    40  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x000014c9   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    InitGPIOLedBlink                         0x00002289   Thumb Code    54  main.o(i.InitGPIOLedBlink)
    InitGreenLED                             0x000022cd   Thumb Code   316  main.o(i.InitGreenLED)
    InitMotor                                0x0000241d   Thumb Code   578  main.o(i.InitMotor)
    InitPWM                                  0x00002679   Thumb Code   150  main.o(i.InitPWM)
    InitSongs                                0x00002721   Thumb Code   116  main.o(i.InitSongs)
    InitUART2                                0x000027bd   Thumb Code   174  main.o(i.InitUART2)
    PORTD_IRQHandler                         0x00002879   Thumb Code   106  main.o(i.PORTD_IRQHandler)
    SystemCoreClockUpdate                    0x00002901   Thumb Code   372  system_mkl25z4.o(i.SystemCoreClockUpdate)
    SystemInit                               0x00002a91   Thumb Code     8  system_mkl25z4.o(i.SystemInit)
    UART2_IRQHandler                         0x00002a9d   Thumb Code    50  main.o(i.UART2_IRQHandler)
    __ARM_common_switch8                     0x00002ae1   Thumb Code    28  main.o(i.__ARM_common_switch8)
    _mutex_acquire                           0x00002bad   Thumb Code    24  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00002bc5   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x00002bd1   Thumb Code    36  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00002bf5   Thumb Code    20  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00002c09   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    autonomous_thread                        0x00002c11   Thumb Code   102  main.o(i.autonomous_thread)
    greenLedControlAll                       0x00002c85   Thumb Code   288  main.o(i.greenLedControlAll)
    greenLedControlSingle                    0x00002da9   Thumb Code   408  main.o(i.greenLedControlSingle)
    initUltraSonic                           0x00002f45   Thumb Code   142  main.o(i.initUltraSonic)
    led_control                              0x00002fe5   Thumb Code    32  main.o(i.led_control)
    main                                     0x00003009   Thumb Code   322  main.o(i.main)
    motorBackward                            0x000031d1   Thumb Code    68  main.o(i.motorBackward)
    motorDiagonalLeft                        0x00003219   Thumb Code    68  main.o(i.motorDiagonalLeft)
    motorDiagonalRight                       0x00003265   Thumb Code    68  main.o(i.motorDiagonalRight)
    motorForward                             0x000032b1   Thumb Code    68  main.o(i.motorForward)
    motorLeft                                0x000032f9   Thumb Code    68  main.o(i.motorLeft)
    motorRight                               0x00003341   Thumb Code    68  main.o(i.motorRight)
    motorRotateCone                          0x00003389   Thumb Code   196  main.o(i.motorRotateCone)
    motorStopAll                             0x0000344d   Thumb Code    24  main.o(i.motorStopAll)
    moveSpecificWheel                        0x0000346d   Thumb Code    70  main.o(i.moveSpecificWheel)
    osRtxErrorNotify                         0x000034bd   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x000034dd   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    playNote                                 0x00003505   Thumb Code    46  main.o(i.playNote)
    tBrain                                   0x0000353d   Thumb Code   278  main.o(i.tBrain)
    tGreenLedStill                           0x00003691   Thumb Code   134  main.o(i.tGreenLedStill)
    tMotorBackward                           0x00003725   Thumb Code    20  main.o(i.tMotorBackward)
    tMotorDiagLeft                           0x00003739   Thumb Code    20  main.o(i.tMotorDiagLeft)
    tMotorDiagRight                          0x0000374d   Thumb Code    20  main.o(i.tMotorDiagRight)
    tMotorForward                            0x00003761   Thumb Code    20  main.o(i.tMotorForward)
    tMotorLeft                               0x00003775   Thumb Code    20  main.o(i.tMotorLeft)
    tMotorRight                              0x00003789   Thumb Code    20  main.o(i.tMotorRight)
    tPlaySong                                0x0000379d   Thumb Code   166  main.o(i.tPlaySong)
    tRedLed250                               0x00003855   Thumb Code    54  main.o(i.tRedLed250)
    tRedLed500                               0x00003895   Thumb Code    58  main.o(i.tRedLed500)
    tRunningLedGreen                         0x000038d9   Thumb Code   478  main.o(i.tRunningLedGreen)
    ultrasonic_counter_thread                0x00003ac5   Thumb Code    30  main.o(i.ultrasonic_counter_thread)
    ultrasonic_trigger_thread                0x00003aed   Thumb Code    60  main.o(i.ultrasonic_trigger_thread)
    thread1_attr_high                        0x00003b30   Data          36  main.o(.constdata)
    movementThread1_attr_high                0x00003b54   Data          36  main.o(.constdata)
    ultrasonic_trigger_attr                  0x00003b78   Data          36  main.o(.constdata)
    osRtxUserSVC                             0x00003bfc   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x00003c00   Data           1  irq_cm0.o(.constdata)
    osRtxConfig                              0x00003c04   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x00003c6c   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x00003cb0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003cd0   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20000040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20000074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200000c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000014c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    ledNum                                   0x20000350   Data           4  main.o(.data)
    mqid_rx                                  0x20000354   Data           4  main.o(.data)
    rx_data                                  0x20000358   Data           1  main.o(.data)
    blocked                                  0x2000035c   Data           4  main.o(.data)
    test                                     0x20000360   Data           4  main.o(.data)
    count                                    0x20000364   Data           4  main.o(.data)
    victoryCount                             0x20000368   Data           4  main.o(.data)
    musical_notes                            0x2000036c   Data         360  main.o(.data)
    canon_in_d                               0x200004d4   Data         122  main.o(.data)
    canon_in_d_period                        0x20000550   Data         488  main.o(.data)
    check_wifi                               0x20000738   Data           4  main.o(.data)
    check_wifi_period                        0x2000073c   Data          16  main.o(.data)
    victory                                  0x2000074c   Data          17  main.o(.data)
    victory_period                           0x20000760   Data          68  main.o(.data)
    MOVEMENT_STATE                           0x200007a4   Data           1  main.o(.data)
    MUSIC_STATE                              0x200007a5   Data           1  main.o(.data)
    motor_forward                            0x200007a8   Data           4  main.o(.data)
    motor_backward                           0x200007ac   Data           4  main.o(.data)
    motor_left                               0x200007b0   Data           4  main.o(.data)
    motor_right                              0x200007b4   Data           4  main.o(.data)
    motor_diag_right                         0x200007b8   Data           4  main.o(.data)
    motor_diag_left                          0x200007bc   Data           4  main.o(.data)
    self_driving_mode                        0x200007c0   Data           4  main.o(.data)
    check_wifi_led                           0x200007c4   Data           4  main.o(.data)
    running_led_green                        0x200007c8   Data           4  main.o(.data)
    still_led_green                          0x200007cc   Data           4  main.o(.data)
    led_red_500                              0x200007d0   Data           4  main.o(.data)
    led_red_250                              0x200007d4   Data           4  main.o(.data)
    play_victory_song                        0x200007d8   Data           4  main.o(.data)
    play_running_song                        0x200007dc   Data           4  main.o(.data)
    play_checkWifi_song                      0x200007e0   Data           4  main.o(.data)
    green_led_semaphore                      0x200007e4   Data           4  main.o(.data)
    red_led_semaphore                        0x200007e8   Data           4  main.o(.data)
    buzzer_semaphore                         0x200007ec   Data           4  main.o(.data)
    threshold                                0x200007f0   Data           4  main.o(.data)
    counter                                  0x200007f4   Data           4  main.o(.data)
    hasStarted                               0x200007f8   Data           4  main.o(.data)
    stage                                    0x200007fc   Data           4  main.o(.data)
    ultrasonicCounterEvent                   0x20000800   Data           4  main.o(.data)
    autonomousMotionMsgQueue                 0x20000804   Data           4  main.o(.data)
    irqRtxLibRef                             0x20000808   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x20000810   Data           4  system_mkl25z4.o(.data)
    osRtxInfo                                0x20000814   Data         164  rtx_kernel.o(.data.os)
    canonInD                                 0x200008b8   Data         976  main.o(.bss)
    checkWifi                                0x20000c88   Data          32  main.o(.bss)
    Victory                                  0x20000ca8   Data         136  main.o(.bss)
    __libspace_start                         0x20000d30   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000d90   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000189

  Load Region LR_1 (Base: 0x00000000, Size: 0x00005588, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00003e7c])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003cd0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          456    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000008   Code   RO         1057  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO         1226    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO         1228    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO         1093    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1107    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1109    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1112    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1114    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1116    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1119    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1121    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1123    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1125    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1127    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1129    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1131    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1133    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1135    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1137    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1139    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1143    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1145    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1147    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1149    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000002   Code   RO         1150    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x00000124   0x00000124   0x00000002   Code   RO         1181    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1207    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1209    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1212    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1215    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1217    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1220    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000002   Code   RO         1221    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000128   0x00000128   0x00000000   Code   RO         1059    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000128   0x00000128   0x00000000   Code   RO         1065    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000128   0x00000128   0x00000006   Code   RO         1077    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000012e   0x0000012e   0x00000008   Code   RO         1066    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x00000136   0x00000136   0x00000004   Code   RO         1068    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0000013a   0x0000013a   0x00000000   Code   RO         1070    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0000013a   0x0000013a   0x00000008   Code   RO         1071    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x00000142   0x00000142   0x00000002   Code   RO         1098    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000144   0x00000144   0x00000000   Code   RO         1154    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000144   0x00000144   0x00000004   Code   RO         1155    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000148   0x00000148   0x00000006   Code   RO         1156    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0000014e   0x0000014e   0x00000002   PAD
    0x00000150   0x00000150   0x00000038   Code   RO         1045    .emb_text           c_p.l(rt_memcpy.o)
    0x00000188   0x00000188   0x00000040   Code   RO          458  * .text               startup_mkl25z4.o
    0x000001c8   0x000001c8   0x000000a4   Code   RO          887    .text               RTX_CM0.lib(irq_cm0.o)
    0x0000026c   0x0000026c   0x00000082   Code   RO         1046    .text               c_p.l(rt_memcpy.o)
    0x000002ee   0x000002ee   0x00000040   Code   RO         1049    .text               c_p.l(rt_memclr.o)
    0x0000032e   0x0000032e   0x00000006   Code   RO         1055    .text               c_p.l(heapauxi.o)
    0x00000334   0x00000334   0x0000003e   Code   RO         1081    .text               c_p.l(sys_stackheap_outer.o)
    0x00000372   0x00000372   0x00000010   Code   RO         1084    .text               c_p.l(exit.o)
    0x00000382   0x00000382   0x00000002   PAD
    0x00000384   0x00000384   0x00000008   Code   RO         1094    .text               c_p.l(libspace.o)
    0x0000038c   0x0000038c   0x0000000c   Code   RO         1151    .text               c_p.l(sys_exit.o)
    0x00000398   0x00000398   0x00000002   Code   RO         1170    .text               c_p.l(use_no_semi.o)
    0x0000039a   0x0000039a   0x00000000   Code   RO         1172    .text               c_p.l(indicate_semi.o)
    0x0000039a   0x0000039a   0x00000056   Code   RO         1224    .text               c_p.l(__dczerorl2.o)
    0x000003f0   0x000003f0   0x0000000c   Code   RO         1022    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x000003fc   0x000003fc   0x00000002   Code   RO          500    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x000003fe   0x000003fe   0x00000002   PAD
    0x00000400   0x00000400   0x00000010   Code   RO          457    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x0000015a   Code   RO         1051    .text               c_p.l(aeabi_sdiv.o)
    0x0000056a   0x0000056a   0x0000004e   Code   RO          737    .text.EventFlagsCheck  RTX_CM0.lib(rtx_evflags.o)
    0x000005b8   0x000005b8   0x0000004c   Code   RO          870    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000604   0x00000604   0x00000062   Code   RO          864    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000666   0x00000666   0x0000001e   Code   RO          862    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000684   0x00000684   0x0000002c   Code   RO         1018    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x000006b0   0x000006b0   0x00000006   Code   RO         1024    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x000006b6   0x000006b6   0x00000002   PAD
    0x000006b8   0x000006b8   0x0000004c   Code   RO         1016    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x00000704   0x00000704   0x00000024   Code   RO          809    .text.SemaphoreTokenDecrement  RTX_CM0.lib(rtx_semaphore.o)
    0x00000728   0x00000728   0x00000026   Code   RO          815    .text.SemaphoreTokenIncrement  RTX_CM0.lib(rtx_semaphore.o)
    0x0000074e   0x0000074e   0x0000004e   Code   RO          645    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x0000079c   0x0000079c   0x0000004c   Code   RO          908    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x000007e8   0x000007e8   0x00000028   Code   RO          698    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x00000810   0x00000810   0x00000024   Code   RO          721    .text.osEventFlagsClear  RTX_CM0.lib(rtx_evflags.o)
    0x00000834   0x00000834   0x00000024   Code   RO          715    .text.osEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x00000858   0x00000858   0x00000050   Code   RO          719    .text.osEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x000008a8   0x000008a8   0x00000044   Code   RO          729    .text.osEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x000008ec   0x000008ec   0x00000030   Code   RO          508    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x0000091c   0x0000091c   0x00000028   Code   RO          502    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00000944   0x00000944   0x00000024   Code   RO          512    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00000968   0x00000968   0x00000074   Code   RO          836    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x000009dc   0x000009dc   0x00000024   Code   RO          830    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000a00   0x00000a00   0x00000078   Code   RO          834    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000a78   0x00000a78   0x00000028   Code   RO          762    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00000aa0   0x00000aa0   0x00000028   Code   RO          768    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00000ac8   0x00000ac8   0x00000024   Code   RO          758    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x00000aec   0x00000aec   0x00000028   Code   RO          764    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00000b14   0x00000b14   0x00000034   Code   RO          735    .text.osRtxEventFlagsPostProcess  RTX_CM0.lib(rtx_evflags.o)
    0x00000b48   0x00000b48   0x0000007c   Code   RO          935    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x00000bc4   0x00000bc4   0x0000004e   Code   RO          937    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x00000c12   0x00000c12   0x00000032   Code   RO          933    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x00000c44   0x00000c44   0x0000002e   Code   RO          950    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x00000c72   0x00000c72   0x0000003a   Code   RO          952    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x00000cac   0x00000cac   0x0000003e   Code   RO          948    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x00000cea   0x00000cea   0x000000bc   Code   RO          860    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000da6   0x00000da6   0x00000044   Code   RO          756    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00000dea   0x00000dea   0x00000002   PAD
    0x00000dec   0x00000dec   0x00000080   Code   RO         1003    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x00000e6c   0x00000e6c   0x0000006c   Code   RO         1005    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x00000ed8   0x00000ed8   0x00000024   Code   RO          807    .text.osRtxSemaphorePostProcess  RTX_CM0.lib(rtx_semaphore.o)
    0x00000efc   0x00000efc   0x00000038   Code   RO          585    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x00000f34   0x00000f34   0x00000080   Code   RO          593    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x00000fb4   0x00000fb4   0x00000044   Code   RO          589    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x00000ff8   0x00000ff8   0x00000038   Code   RO          575    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x00001030   0x00001030   0x00000050   Code   RO          583    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x00001080   0x00001080   0x00000054   Code   RO          669    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x000010d4   0x000010d4   0x00000014   Code   RO          567    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x000010e8   0x000010e8   0x0000002c   Code   RO          565    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x00001114   0x00001114   0x00000018   Code   RO          571    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x0000112c   0x0000112c   0x00000026   Code   RO          569    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x00001152   0x00001152   0x00000026   Code   RO          643    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x00001178   0x00001178   0x00000018   Code   RO          573    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x00001190   0x00001190   0x00000006   Code   RO          577    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x00001196   0x00001196   0x00000002   PAD
    0x00001198   0x00001198   0x0000002c   Code   RO          581    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x000011c4   0x000011c4   0x00000040   Code   RO          595    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x00001204   0x00001204   0x00000014   Code   RO          579    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00001218   0x00001218   0x0000003c   Code   RO          591    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x00001254   0x00001254   0x00000022   Code   RO          587    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x00001276   0x00001276   0x00000002   PAD
    0x00001278   0x00001278   0x00000074   Code   RO         1001    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x000012ec   0x000012ec   0x0000003c   Code   RO          892    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00001328   0x00001328   0x00000060   Code   RO          894    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x00001388   0x00001388   0x00000044   Code   RO          795    .text.osSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x000013cc   0x000013cc   0x00000024   Code   RO          791    .text.osSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x000013f0   0x000013f0   0x0000004c   Code   RO          797    .text.osSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x0000143c   0x0000143c   0x0000000c   Code   RO          627    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00001448   0x00001448   0x00000058   Code   RO          635    .text.osThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x000014a0   0x000014a0   0x00000028   Code   RO          641    .text.osThreadFlagsWait  RTX_CM0.lib(rtx_thread.o)
    0x000014c8   0x000014c8   0x00000024   Code   RO          599    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x000014ec   0x000014ec   0x00000012   Code   RO          702    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x000014fe   0x000014fe   0x00000032   Code   RO          723    .text.svcRtxEventFlagsClear  RTX_CM0.lib(rtx_evflags.o)
    0x00001530   0x00001530   0x00000074   Code   RO          733    .text.svcRtxEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x000015a4   0x000015a4   0x0000007c   Code   RO          741    .text.svcRtxEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x00001620   0x00001620   0x00000064   Code   RO          743    .text.svcRtxEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x00001684   0x00001684   0x0000000c   Code   RO          510    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x00001690   0x00001690   0x00000148   Code   RO          540    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x000017d8   0x000017d8   0x00000084   Code   RO          542    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x0000185c   0x0000185c   0x000000e8   Code   RO          872    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001944   0x00001944   0x000001e4   Code   RO          858    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001b28   0x00001b28   0x000000bc   Code   RO          868    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001be4   0x00001be4   0x00000098   Code   RO          774    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00001c7c   0x00001c7c   0x000000bc   Code   RO          780    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00001d38   0x00001d38   0x00000070   Code   RO          770    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x00001da8   0x00001da8   0x000000c0   Code   RO          776    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00001e68   0x00001e68   0x0000004c   Code   RO          813    .text.svcRtxSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x00001eb4   0x00001eb4   0x00000088   Code   RO          805    .text.svcRtxSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x00001f3c   0x00001f3c   0x00000038   Code   RO          817    .text.svcRtxSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x00001f74   0x00001f74   0x0000006c   Code   RO          673    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00001fe0   0x00001fe0   0x0000006c   Code   RO          681    .text.svcRtxThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x0000204c   0x0000204c   0x00000050   Code   RO          687    .text.svcRtxThreadFlagsWait  RTX_CM0.lib(rtx_thread.o)
    0x0000209c   0x0000209c   0x000001ec   Code   RO          597    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x00002288   0x00002288   0x00000044   Code   RO            3    i.InitGPIOLedBlink  main.o
    0x000022cc   0x000022cc   0x00000150   Code   RO            4    i.InitGreenLED      main.o
    0x0000241c   0x0000241c   0x0000025c   Code   RO            5    i.InitMotor         main.o
    0x00002678   0x00002678   0x000000a8   Code   RO            6    i.InitPWM           main.o
    0x00002720   0x00002720   0x0000009c   Code   RO            7    i.InitSongs         main.o
    0x000027bc   0x000027bc   0x000000bc   Code   RO            8    i.InitUART2         main.o
    0x00002878   0x00002878   0x00000088   Code   RO            9    i.PORTD_IRQHandler  main.o
    0x00002900   0x00002900   0x00000190   Code   RO          466    i.SystemCoreClockUpdate  system_mkl25z4.o
    0x00002a90   0x00002a90   0x0000000c   Code   RO          467    i.SystemInit        system_mkl25z4.o
    0x00002a9c   0x00002a9c   0x00000044   Code   RO           10    i.UART2_IRQHandler  main.o
    0x00002ae0   0x00002ae0   0x0000001c   Code   RO          291    i.__ARM_common_switch8  main.o
    0x00002afc   0x00002afc   0x00000018   Code   RO           11    i.__NVIC_ClearPendingIRQ  main.o
    0x00002b14   0x00002b14   0x00000020   Code   RO           12    i.__NVIC_EnableIRQ  main.o
    0x00002b34   0x00002b34   0x00000078   Code   RO           13    i.__NVIC_SetPriority  main.o
    0x00002bac   0x00002bac   0x00000018   Code   RO          350    i._mutex_acquire    rtx_lib.o
    0x00002bc4   0x00002bc4   0x0000000c   Code   RO          351    i._mutex_free       rtx_lib.o
    0x00002bd0   0x00002bd0   0x00000024   Code   RO          352    i._mutex_initialize  rtx_lib.o
    0x00002bf4   0x00002bf4   0x00000014   Code   RO          353    i._mutex_release    rtx_lib.o
    0x00002c08   0x00002c08   0x00000008   Code   RO          354    i._platform_post_stackheap_init  rtx_lib.o
    0x00002c10   0x00002c10   0x00000074   Code   RO           14    i.autonomous_thread  main.o
    0x00002c84   0x00002c84   0x00000124   Code   RO           15    i.greenLedControlAll  main.o
    0x00002da8   0x00002da8   0x0000019c   Code   RO           16    i.greenLedControlSingle  main.o
    0x00002f44   0x00002f44   0x000000a0   Code   RO           17    i.initUltraSonic    main.o
    0x00002fe4   0x00002fe4   0x00000024   Code   RO           18    i.led_control       main.o
    0x00003008   0x00003008   0x000001c8   Code   RO           19    i.main              main.o
    0x000031d0   0x000031d0   0x00000048   Code   RO           20    i.motorBackward     main.o
    0x00003218   0x00003218   0x0000004c   Code   RO           21    i.motorDiagonalLeft  main.o
    0x00003264   0x00003264   0x0000004c   Code   RO           22    i.motorDiagonalRight  main.o
    0x000032b0   0x000032b0   0x00000048   Code   RO           23    i.motorForward      main.o
    0x000032f8   0x000032f8   0x00000048   Code   RO           24    i.motorLeft         main.o
    0x00003340   0x00003340   0x00000048   Code   RO           25    i.motorRight        main.o
    0x00003388   0x00003388   0x000000c4   Code   RO           26    i.motorRotateCone   main.o
    0x0000344c   0x0000344c   0x00000020   Code   RO           27    i.motorStopAll      main.o
    0x0000346c   0x0000346c   0x00000050   Code   RO           28    i.moveSpecificWheel  main.o
    0x000034bc   0x000034bc   0x00000020   Code   RO          426    i.osRtxErrorNotify  rtx_config.o
    0x000034dc   0x000034dc   0x00000004   Code   RO          427    i.osRtxIdleThread   rtx_config.o
    0x000034e0   0x000034e0   0x00000024   Code   RO          355    i.os_kernel_is_active  rtx_lib.o
    0x00003504   0x00003504   0x00000038   Code   RO           30    i.playNote          main.o
    0x0000353c   0x0000353c   0x00000154   Code   RO           33    i.tBrain            main.o
    0x00003690   0x00003690   0x00000094   Code   RO           35    i.tGreenLedStill    main.o
    0x00003724   0x00003724   0x00000014   Code   RO           36    i.tMotorBackward    main.o
    0x00003738   0x00003738   0x00000014   Code   RO           37    i.tMotorDiagLeft    main.o
    0x0000374c   0x0000374c   0x00000014   Code   RO           38    i.tMotorDiagRight   main.o
    0x00003760   0x00003760   0x00000014   Code   RO           39    i.tMotorForward     main.o
    0x00003774   0x00003774   0x00000014   Code   RO           40    i.tMotorLeft        main.o
    0x00003788   0x00003788   0x00000014   Code   RO           41    i.tMotorRight       main.o
    0x0000379c   0x0000379c   0x000000b8   Code   RO           42    i.tPlaySong         main.o
    0x00003854   0x00003854   0x00000040   Code   RO           43    i.tRedLed250        main.o
    0x00003894   0x00003894   0x00000044   Code   RO           44    i.tRedLed500        main.o
    0x000038d8   0x000038d8   0x000001ec   Code   RO           45    i.tRunningLedGreen  main.o
    0x00003ac4   0x00003ac4   0x00000028   Code   RO           47    i.ultrasonic_counter_thread  main.o
    0x00003aec   0x00003aec   0x00000044   Code   RO           48    i.ultrasonic_trigger_thread  main.o
    0x00003b30   0x00003b30   0x0000006c   Data   RO           50    .constdata          main.o
    0x00003b9c   0x00003b9c   0x00000064   Data   RO          362    .constdata          rtx_lib.o
    0x00003c00   0x00003c00   0x00000001   Data   RO          886    .constdata          RTX_CM0.lib(irq_cm0.o)
    0x00003c01   0x00003c01   0x00000003   PAD
    0x00003c04   0x00003c04   0x000000a0   Data   RO          364    .rodata             rtx_lib.o
    0x00003ca4   0x00003ca4   0x0000000b   Data   RO          554    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x00003caf   0x00003caf   0x00000001   PAD
    0x00003cb0   0x00003cb0   0x00000020   Data   RO         1222    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x1ffff000, Load base: 0x00003cd0, Size: 0x000018b8, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x000001ac])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   COMPRESSED   0x00001040   Data   RW          356    .bss.os             rtx_lib.o
    0x20000040   COMPRESSED   0x00000034   Data   RW          358    .bss.os.msgqueue.cb  rtx_lib.o
    0x20000074   COMPRESSED   0x00000050   Data   RW          359    .bss.os.msgqueue.mem  rtx_lib.o
    0x200000c4   COMPRESSED   0x00000088   Data   RW          360    .bss.os.thread.cb   rtx_lib.o
    0x2000014c   COMPRESSED   0x00000004   PAD
    0x20000150   COMPRESSED   0x00000200   Data   RW          361    .bss.os.thread.stack  rtx_lib.o
    0x20000350   COMPRESSED   0x000004b8   Data   RW           51    .data               main.o
    0x20000808   COMPRESSED   0x00000005   Data   RW          363    .data               rtx_lib.o
    0x2000080d   COMPRESSED   0x00000003   PAD
    0x20000810   COMPRESSED   0x00000004   Data   RW          468    .data               system_mkl25z4.o
    0x20000814   COMPRESSED   0x000000a4   Data   RW          555    .data.os            RTX_CM0.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200008b8, Load base: 0x00003e7c, Size: 0x000005e0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200008b8        -       0x00000478   Zero   RW           49    .bss                main.o
    0x20000d30        -       0x00000060   Zero   RW         1095    .bss                c_p.l(libspace.o)
    0x20000d90        -       0x00000001   Zero   RW         1034    .bss.PendST         RTX_CM0.lib(os_systick.o)
    0x20000d91   0x00003e7c   0x00000007   PAD
    0x20000d98        -       0x00000000   Zero   RW          455    HEAP                startup_mkl25z4.o
    0x20000d98        -       0x00000100   Zero   RW          454    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      5728        642        108       1208       1144     252608   main.o
        36          8          0          0          0        925   rtx_config.o
       136          6        260       4945          0      12686   rtx_lib.o
        80         44        192          0        256        844   startup_mkl25z4.o
       412         42          0          4          0       1447   system_mkl25z4.o

    ----------------------------------------------------------------------
      6392        742        592       6164       1400     268510   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          1          0          0        496   irq_cm0.o
       138         32          0          0          1       2766   os_systick.o
        58          4          0          0          0       2753   rtx_delay.o
       740         28          0          0          0      12348   rtx_evflags.o
       598         48         11        164          0      16105   rtx_kernel.o
       252          0          0          0          0       2564   rtx_memory.o
       166          0          0          0          0      14282   rtx_mempool.o
      1568         44          0          0          0      17889   rtx_msgqueue.o
       868         32          0          0          0       9201   rtx_mutex.o
       558         28          0          0          0      10054   rtx_semaphore.o
       352         26          0          0          0       4635   rtx_system.o
      1930        108          0          0          0      30867   rtx_thread.o
       232         20          0          0          0      10018   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
       346          0          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      8568        394         16        164        104     134870   Library Totals
        14          0          4          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7624        378         12        164          1     133978   RTX_CM0.lib
       930         16          0          0         96        892   c_p.l

    ----------------------------------------------------------------------
      8568        394         16        164        104     134870   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14960       1136        608       6328       1504     400672   Grand Totals
     14960       1136        608        428       1504     400672   ELF Image Totals (compressed)
     14960       1136        608        428          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15568 (  15.20kB)
    Total RW  Size (RW Data + ZI Data)              7832 (   7.65kB)
    Total ROM Size (Code + RO Data + RW Data)      15996 (  15.62kB)

==============================================================================

